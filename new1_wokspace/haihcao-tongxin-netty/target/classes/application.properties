server.port=8080
server.tomact.uri-encoding=UTF-8
#### mybatis 配置
mybatis.type-aliases-package=com.tongxin.pojo
mybatis.mapper-locations=classpath:mapper/*.xml
#通用 Mapper 配置
mapper.mappers=com.tongxin.utils.MyMapper
mapper.not-empty=false
mapper.identity=MYSQL

#pagehelper
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql
#热部署
#restart.include.mapper=/mapper-[\\w-\\.]+jar
#restart.include.pagehelper=/pagehelper-[\\w-\\.]+jar

##数据源 jdbc_config datasource
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://127.0.0.1:3306/tongxin
#spring.datasource.name=root
#spring.datasource.password=root
#
##Hikari 数据连接池工具
#spring.datasource.type=com.zaxxer.hikari.HikariDataSource
##等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException,默认30s
#spring.datasource.hikari.connection-timeout=30000
##最小连接数
#spring.datasource.hikari.minimum-idle=5
##最大连接数
#spring.datasource.hikari.maximum-pool-size=15
##自动提交
#spring.datasource.hikari.auto-commit=true
##一个连接idle状态的最大时长（毫秒），超时则被释放（retired），默认：10分钟
#spring.datasource.hikari.idle-timeout=600000
##连接池名字
#spring.datasource.hikari.pool-name=DatebookHikariCP
##一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），默认30分钟
#spring.datasource.hikari.max-lifetime=28740000
#spring.datasource.hikari.connection-test-query=SELECT 1





# 驱动配置信息
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url = jdbc:mysql://127.0.0.1:3306/tongxun
spring.datasource.username = root
spring.datasource.password = root
spring.datasource.driverClassName = com.mysql.jdbc.Driver
 
# 连接池的配置信息
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
